language: c

# Two compilers because clang and GCC output different errors.
compiler:
    - clang
    - gcc

# env lets us spawn one VM per value of a variable.
# TEST_TARGET runs make test and make test-sentinel concurrently
# REDIS_CFLAGS fails to compile on warning to alert us about... warnings.
# What gets run:
# {gcc,   make -j REDIS_CFLAGS="",      make test}
# {gcc,   make -j REDIS_CFLAGS="",      make test-sentinel}
# {gcc,   make -j REDIS_CFLAGS=-Werror, make}  # The last make is a noop
# {clang, make -j REDIS_CFLAGS="",      make test}
# {clang, make -j REDIS_CFLAGS="",      make test-sentinel}
# {clang, make -j REDIS_CFLAGS=-Werror, make}  # The last make is a noop
env:
    - TEST_TARGET=test-valgrind
    - TEST_TARGET=test-sentinel-valgrind
    - TEST_TARGET=test-cluster-valgrind
    - TEST_TARGET="32bit test-valgrind"
    - TEST_TARGET="32bit test-sentinel-valgrind"
    - TEST_TARGET="32bit test-cluster-valgrind"
    - TEST_TARGET=test
    - TEST_TARGET=test-sentinel
    - TEST_TARGET=test-cluster
    - TEST_TARGET=test-cluster-bring-up
    - TEST_TARGET="32bit test"
    - TEST_TARGET="32bit test-sentinel"
    - TEST_TARGET="32bit test-cluster"
    - REDIS_CFLAGS="-Werror"

before_install:
    - sudo apt-get update

# Actually, we should only install 'valgrind' if we are using a 'valgrind'
# target.  Eventually make an install script to install only what each
# target needs.
install:
    - sudo apt-get install tcl libc6-dbg libc6-dev libc6-i686:i386 libc6-dev-i386 libc6-dbg:i386 valgrind -y
    - pushd /tmp && curl http://valgrind.org/downloads/valgrind-3.10.1.tar.bz2 | tar xjp
    - pushd valgrind*/ && ./configure
    - make -j 4
    - sudo make install
    - popd && popd
    - gem install redis

# We start from inside src so -j is evaluated properly
script: cd src; make -j REDIS_CFLAGS=$REDIS_CFLAGS && make $TEST_TARGET
